#!/bin/bash

set -o errexit
set -o xtrace
set -o nounset

# Source reads
READS1=$2
READS2=$3

# Output directory
DIR=$4
ASSEMBLY=$DIR/contigs.fa

# Set up logging
LOG=$DIR/log.txt
exec > >(tee ${LOG})
exec 2>&1

#TMP_DIR=$(mktemp -d)
#gunzip --to-stdout $READS > ${TMP_DIR}/reads.fq
gunzip --to-stdout $READS1 > ${DIR}/reads1.fq
gunzip --to-stdout $READS2 > ${DIR}/reads2.fq

CONFIG=$(mktemp)
cat << EOF > ${CONFIG}
max_rd_len=400
[LIB]
#average insert size
avg_ins=270
#if sequence needs to be reversed
reverse_seq=0
#in which part(s) the reads are used
asm_flags=3
#in which order the reads are used while scaffolding
rank=1
# Use non-interleaved fastq
# I get segmentation faults if I use the p option
q1=${DIR}/reads1.fq
q2=${DIR}/reads2.fq
EOF

CPU=1

#cd $TMP_DIR
cd $DIR

NAME=genome

# Determine which process to run
PROC=$1
#CMD=$(egrep ^${PROC}: /Procfile | cut -f 2 -d ':')
CMD=$(egrep ^${PROC}: /usr/local/bin/Procfile | cut -f 2 -d ':')

if [[ -z ${CMD} ]]; then
  echo "Abort, no proc found for '${PROC}'."
  exit 1
fi
eval ${CMD}

mv ${NAME}.scafSeq $ASSEMBLY
